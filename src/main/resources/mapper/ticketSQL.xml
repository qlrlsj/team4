<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ticket">
		<!-- select id="DAO에서 보내준 메소드명과 동일하다" -->
	<!-- parameterType="패키지 경로를 전부 적어주어야 구분이 가능하다 mapper로 들어온 값을 의미한다" (Mybatis에서는 파라미터타입을 한개만 가능하다) -->
	<!-- resultType="mapper에서 나가는 값을 의미한다" -->
	<!-- <select id="selectOneMember" parameterType="kr.or.member.model.vo.Member" resultType="kr.or.member.model.vo.Member"></select> -->
	
	<select id="selectAllTicketCategory" resultType="tc"> 
		select
			category_id as categoryId, 
			category_name as categoryName,
			parent_category_id as parentCategoryId
		from ticket_category
	</select>
	
	<select id="selectAllLocal" resultType="lc"> 
		select
			local_id as localId, 
			local_name as localName,
			parent_local_id as parentLocalId,
			local_filepath as localFilepath
		from local_category order by localName
	</select>
	
	<insert id="insertTicket" parameterType="t" >
		insert into ticket values
		(ticket_seq.nextval
		,#{localId}
		,#{categoryId}
		,#{memberNo}
		,#{expireDate}
		,#{ticketTitle}
		,#{ticketContent}
		,#{importantContent}
		,#{businessTime}
		,#{businessAddr}
		,#{requiredTime}
		,0,0,#{startDate})
		<selectKey resultType="int" order="AFTER" keyProperty="ticketNo">
			select max(ticket_no) from ticket
		</selectKey>
	</insert>
	<insert id="insertTicketOption" parameterType="to">
		insert into ticket_option values
		(ticket_opt_seq.nextval
		,#{ticketNo}
		,#{optTitle}
		,#{optContent}
		,#{optPrice}
		,#{optDiscountRate}
		,#{optDiscountPrice}
		,#{optStock})
	</insert>
	
	<insert id="insertTicketFile" parameterType="tf">
		insert into ticket_file values
		(#{ticketNo}
		,#{placeFilepath}
		,#{ticketFilepath1}
		,#{ticketFilepath2}
		,#{ticketFilepath3}
		,#{ticketFilepath4})
	</insert>
	
	<select id="selectTicket" parameterType="int" resultType="t">
		select 
            c1.category_name as categoryName,
            c2.category_name as parentCategoryName,
            l1.local_name as localName,
            l2.local_name as parentLocalName,
			ticket_no as ticketNo,
			t.local_id as localId,
			t.category_id as categoryId,
			member_no as memberNo,
			start_date as startDate,
			expire_date as expireDate,
			ticket_title as ticketTitle,
			ticket_content as ticketContent,
			important_content as importantContent,
			business_time as businessTime,
			business_addr as businessAddr,
			required_time as requiredTime,
			like_count as likeCount,
			ticket_score as ticketScore
        from ticket t
        join ticket_Category c1 on (t.category_id = c1.category_id)
        join ticket_category c2 on (c1.parent_category_id = c2.category_id)
        join local_category l1 on (t.local_id = l1.local_id)
        join local_category l2 on (l1.parent_local_id = l2.local_id)
        where ticket_no=#{ticketNo}
	</select>
	<select id="selectTicketOption" parameterType="int" resultType="to">
		select
			opt_no as optNo,
			ticket_no  as ticketNo,
			opt_title  as optTitle,
			opt_content  as optContent,
			opt_price  as optPrice,
			opt_discount_rate  as optDiscountRate,
			opt_discount_price  as optDiscountPrice,
			opt_stock  as optStock
		from ticket_option
		where ticket_No = #{ticketNo}
	</select>
	
	<select id="selectTicketFile" parameterType="int" resultType="tf">
		select
			ticket_no  as ticketNo,
			place_filepath  as placeFilepath,
			ticket_filepath1  as ticketFilepath1,
			ticket_filepath2  as ticketFilepath2,
			ticket_filepath3  as ticketFilepath3,
			ticket_filepath4  as ticketFilepath4
		from ticket_file
		where ticket_No = #{ticketNo}
	</select>
	<select id="selectPoint" parameterType="int" resultType="int">
		select
			member_point as memberPoint
		from member
		where member_No = #{memberNo}
	</select>
</mapper>