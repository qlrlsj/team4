<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="seller">

	<select id="selectSellerH" parameterType="m" resultType="pr" >
	select 
		hostel_code as productNo,
		hostel_name as productName,
		hostel_score as productScore
	from hostel
	where member_no = #{memberNo}
	</select>
	<select id="selectSellerT" parameterType="m" resultType="pr" >
	  	select             
			ticket_no as productNo,			
			ticket_title as productName,
			ticket_score as productScore
        from ticket
        where member_no=#{memberNo}
	</select>
	<select id="selectSellerP" parameterType="m" resultType="pr" >
		select
			package_no as productNo,
			package_title as productName,
			package_score as productScore,
			package_price as productPrice
		from package
		where member_id = #{memberId}
	</select>
	
	<insert id="cancelInsert" parameterType="int">
		insert into sellercancel values(cancel_seq.nextval, #{memberNo})
	</insert>
	<select id="cancelCheck" parameterType="int" resultType="can">
		select
			cancel_no as cancelNo,
			member_no as memberNo
		from sellercancel
		where member_no = #{memberNo}
	</select>
	<select id="selectCashInfoH" parameterType="m" resultType="spay" >
	select 
		p.pay_date as payDate,
		h.hostel_code as productNo,
		p.pay_no as payNo,
		h.hostel_name as productName,
		m.member_id as memberName,
		p.pay_price as payPrice,
		p.point_use as pointUse,
		p.pay_coupon as couponUse,
		p.point_add as pointAdd,
		p.pay_couponcode as payCouponCode,
		ho.hostel_price as productPrice
	from payment p
	join hostel_reserve hr on (p.pay_no = hr.pay_no)
	join hostel_option ho on (hr.option_no = ho.option_no)
	join hostel h on (ho.hostel_code = ho.hostel_code)
	join member m on (hr.member_no = m.member_no)
	where h.member_no = #{memberNo}
	</select>
	<select id="selectCashInfoT" parameterType="m" resultType="spay">
		select 
            pay_date as payDate,
			t.ticket_no as productNo,
			p.pay_no as payNo,
			t.ticket_title as productName,
			m.member_id as memberName,
			pay_price as payPrice,
			point_use as pointUse,
			pay_coupon as couponUse,
			point_add as pointAdd,
			pay_couponcode as payCouponCode
	    from payment p
        join ticket_reserve tr on (p.pay_no = tr.pay_no)
        join ticket t on (tr.ticket_no = t.ticket_no)
        join member m on (tr.member_no = m.member_no)
        where t.member_no=#{memberNo}
	</select>
		<select id="selectCashInfoP" parameterType="m" resultType="spay">
		select 
            pay_date as payDate,
			pc.package_no as productNo,
			p.pay_no as payNo,
			pc.package_title as productName,
			m.member_id as memberName,
			pay_price as payPrice,
			point_use as pointUse,
			pay_coupon as couponUse,
			point_add as pointAdd,
			pay_couponcode as payCouponCode,
			pc.package_price as productPrice
	    from payment p
	    join package_reserve pr on (p.pay_no = pr.pay_no)
	    join member m on(pr.member_no = m.member_no)
        join package pc on (pr.package_no = pc.package_no)
        where pc.member_id=#{memberId}
	</select>
</mapper>
